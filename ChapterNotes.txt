Ch 2 --> Linked List 

Linked list represent sequence of Nodes. 
Single linked list --> each node point to next node in the list
Doubly LL --> each node points to both next node and previous node in the list.

No constant time element access in LL. means, to find Kth element we need to iterate through K element.
Hence, time constant is O(N), but space constant is O(1) {Need to check this concept}.

Benefit of LL --> you can add and remove items from the begining of LL in constant time. This is useful for many specific applications.

Important thing to remember ---> 1. to check for NULL pointer, 2. to update the head or tail pointer as necessary

Runner Technique in Linked list --> Use of two pointers simultaneously to iterate through list and these pointers are dependent on each other. (for example, one pointer moves one step forward and hence the other pointer moves 2 steps forward.)

Recursive LL approach --> This approach takes O(N) space, where N is depth of recursive call.
Recursive algorithm means, making a call iteratively.
